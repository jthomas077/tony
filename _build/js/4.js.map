{"version":3,"sources":["webpack:///./_src/modules/free-quote/free-quote.ts","webpack:///./_src/js/core/module.ts"],"names":["Quote","el","opts","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","_module2","default","_this2","dom","lnk","on","e","onLnkClick","$","currentTarget","preventDefault","_utils","__webpack_require__","Module","element","arguments","length","undefined","options","getInstanceOfjQuery","ReferenceError","assign","preInit","init","updateDom","bindEventListeners","render","_bootstrap","getCachableDomElements"],"mappings":"idAIAA,cAEI,SAAAA,EAAYC,EAAqBC,GAAY,mGAAAC,CAAAC,KAAAJ,oKAAAK,CAAAD,MAAAJ,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAL,KAEnCH,EAAIC,uUAJEQ,EAAAC,yDAOE,IAAAC,EAAAR,KAEdA,KAAKS,IAAIC,IAAIC,GAAG,iBAAkB,SAACC,GAAD,OAAOJ,EAAKK,WAAWD,0EAelDA,GAEME,EAAEF,EAAEG,eAIjBH,EAAEI,oCAIKpB,0WCjCfqB,EAAAC,EAAA,QAMAC,aAcI,SAAAA,EAA8BC,GAAmD,IAAjBtB,EAAiBuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAI7E,+FAJ6EtB,CAAAC,KAAAmB,GAAnDnB,KAAAoB,UAAkCpB,KAAAF,OAZtDE,KAAAS,OAEAT,KAAAwB,WAYNxB,KAAKH,IAAK,EAAAoB,EAAAQ,qBAAoBL,QAEP,IAAZpB,KAAKH,KAAuBG,KAAKH,GAAGyB,OAE3C,MAAM,IAAII,eAAe,sEAG7BvB,OAAOwB,OAAO3B,KAAKwB,QAAS1B,GAE5BE,KAAK4B,UACL5B,KAAK6B,OACL7B,KAAK8B,YACL9B,KAAK+B,qBACL/B,KAAKgC,0MAwCL7B,OAAOwB,OAAO3B,KAAKS,KAAK,EAAAwB,EAAAC,wBAAuBlC,KAAKH,wBAI7CsB","file":"4.js","sourcesContent":["\n// @ts-ignore\nimport Module from 'core/module';\n\nclass Quote extends Module\n{\n    constructor(el: string | JQuery, opts: object)\n    {\n        super(el, opts);\n    }\n\n    bindEventListeners()\n    {\n        this.dom.lnk.on('click touchend', (e) => this.onLnkClick(e));\n    }\n\n    render()\n    {\n        /*\n        const modal = $('.modal');\n\n        $.when(modal).then((self) =>\n        {\n            self.trigger('open', [{ template: $('.free-quote').html() }])\n        });\n        */\n    }\n\n    onLnkClick(e: EventTarget) : void\n    {\n        const self = $(e.currentTarget);\n\n\n\n        e.preventDefault();\n    }\n}\n\nexport default Quote;\n","\n// @ts-ignore\nimport { getCachableDomElements } from 'core/bootstrap';\n\n// @ts-ignore\nimport { getInstanceOfjQuery } from 'helpers/utils';\n\n/**\n * Abstract Module class.\n * All modules inherit from this class.\n */\nabstract class Module\n{\n    protected dom: object = {};\n\n    protected options: object = {};\n\n    protected el: JQuery;\n\n   /**\n     * Module constructor\n     *\n     * @param {string|JQuery} el Main DOM element in any valid jQuery form i.e. `#foo` or `.bar` or `[data-baz]` or an actual jQuery object.\n     * @param {Object} [opts={}] Module options.\n    */\n    protected constructor(private element: string | JQuery, private opts: object = {})\n    {\n        this.el = getInstanceOfjQuery(element);\n\n        if (typeof this.el === 'undefined' || !this.el.length)\n        {\n            throw new ReferenceError('You must provide an valid element as a string type or jquery type.');\n        }\n\n        Object.assign(this.options, opts);\n\n        this.preInit();\n        this.init();\n        this.updateDom();\n        this.bindEventListeners();\n        this.render();\n\n        if (__DEV__)\n        {\n            const moduleName = this.el.data('module').split(/\\//g).pop();\n\n            if (!!Object.keys(this.dom).length)\n            {\n                console.log(`Cached DOM for module: ${moduleName} =>`, this.dom);\n            }\n\n            if (!!Object.keys(this.options).length)\n            {\n                console.log(`Options for module: ${moduleName} =>`, this.options);\n            }\n        }\n    }\n\n    /**\n     * @abstract\n     */\n    protected preInit() : void {};\n\n    /**\n     * @abstract\n     */\n    protected init() : void {};\n\n    /**\n     * @abstract\n     */\n    protected render() : void {};\n\n    /**\n     * @abstract\n     */\n    protected bindEventListeners() : void {};\n\n    protected updateDom() : void\n    {\n        Object.assign(this.dom, getCachableDomElements(this.el));\n    };\n}\n\nexport default Module;\n"],"sourceRoot":""}