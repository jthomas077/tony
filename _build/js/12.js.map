{"version":3,"sources":["webpack:///./_src/modules/recent-projects/recent-projects.ts","webpack:///./_src/js/core/module.ts"],"names":["__webpack_require__","RecentProjects","el","opts","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","_module2","default","_swiper2","dom","swiperContainer","loop","autoplay","delay","speed","allowTouchMove","grabCursor","watchOverflow","preloadImages","lazy","breakpoints","5000","slidesPerView","spaceBetween","1280","769","navigation","nextEl","swiperButtonNext","prevEl","swiperButtonPrev","_utils","Module","element","arguments","length","undefined","options","getInstanceOfjQuery","ReferenceError","assign","preInit","init","updateDom","bindEventListeners","render","_bootstrap","getCachableDomElements"],"mappings":"qZAKAA,EAAA,6DAEAC,cAEI,SAAAA,EAAYC,EAAqBC,GAAY,mGAAAC,CAAAC,KAAAJ,oKAAAK,CAAAD,MAAAJ,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAL,KAEnCH,EAAIC,uUAJWQ,EAAAC,6CASrB,IAAIC,EAAAD,QAAOP,KAAKS,IAAIC,iBAEhBC,MAAM,EACNC,UAEIC,MAAO,KAEXC,MAAO,IACPC,gBAAgB,EAChBC,YAAY,EACZC,eAAe,EACfC,eAAe,EACfC,MAAM,EAENC,aAEIC,MAEIC,cAAe,EACfC,aAAc,IAGlBC,MAEIF,cAAe,EACfC,aAAc,IAGlBE,KAEIH,cAAe,EACfC,aAAc,KAItBG,YAEIC,OAAQ3B,KAAKS,IAAImB,iBACjBC,OAAQ7B,KAAKS,IAAIqB,qFAWlBlC,uVC5DfmC,EAAApC,EAAA,QAMAqC,aAcI,SAAAA,EAA8BC,GAAmD,IAAjBnC,EAAiBoC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAI7E,+FAJ6EnC,CAAAC,KAAAgC,GAAnDhC,KAAAiC,UAAkCjC,KAAAF,OAZtDE,KAAAS,OAEAT,KAAAqC,WAYNrC,KAAKH,IAAK,EAAAkC,EAAAO,qBAAoBL,QAEP,IAAZjC,KAAKH,KAAuBG,KAAKH,GAAGsC,OAE3C,MAAM,IAAII,eAAe,sEAG7BpC,OAAOqC,OAAOxC,KAAKqC,QAASvC,GAE5BE,KAAKyC,UACLzC,KAAK0C,OACL1C,KAAK2C,YACL3C,KAAK4C,qBACL5C,KAAK6C,0MAwCL1C,OAAOqC,OAAOxC,KAAKS,KAAK,EAAAqC,EAAAC,wBAAuB/C,KAAKH,wBAI7CmC","file":"12.js","sourcesContent":["\n// @ts-ignore\nimport Module from 'core/module';\n\n// @ts-ignore\nimport Swiper from 'swiper';\n\nclass RecentProjects extends Module\n{\n    constructor(el: string | JQuery, opts: object)\n    {\n        super(el, opts);\n    }\n\n    render()\n    {\n        new Swiper(this.dom.swiperContainer,\n        {\n            loop: true,\n            autoplay:\n            {\n                delay: 5000,\n            },\n            speed: 1000,\n            allowTouchMove: true,\n            grabCursor: true,\n            watchOverflow: true,\n            preloadImages: false,\n            lazy: true,\n\n            breakpoints:\n            {\n                5000:\n                {\n                    slidesPerView: 3,\n                    spaceBetween: 35\n                },\n\n                1280:\n                {\n                    slidesPerView: 2,\n                    spaceBetween: 25\n                },\n\n                769:\n                {\n                    slidesPerView: 1,\n                    spaceBetween: 25\n                }\n            },\n\n            navigation:\n            {\n                nextEl: this.dom.swiperButtonNext,\n                prevEl: this.dom.swiperButtonPrev\n            }\n        });\n    }\n\n    bindEventListeners()\n    {\n\n    }\n}\n\nexport default RecentProjects;\n","\n// @ts-ignore\nimport { getCachableDomElements } from 'core/bootstrap';\n\n// @ts-ignore\nimport { getInstanceOfjQuery } from 'helpers/utils';\n\n/**\n * Abstract Module class.\n * All modules inherit from this class.\n */\nabstract class Module\n{\n    protected dom: object = {};\n\n    protected options: object = {};\n\n    protected el: JQuery;\n\n   /**\n     * Module constructor\n     *\n     * @param {string|JQuery} el Main DOM element in any valid jQuery form i.e. `#foo` or `.bar` or `[data-baz]` or an actual jQuery object.\n     * @param {Object} [opts={}] Module options.\n    */\n    protected constructor(private element: string | JQuery, private opts: object = {})\n    {\n        this.el = getInstanceOfjQuery(element);\n\n        if (typeof this.el === 'undefined' || !this.el.length)\n        {\n            throw new ReferenceError('You must provide an valid element as a string type or jquery type.');\n        }\n\n        Object.assign(this.options, opts);\n\n        this.preInit();\n        this.init();\n        this.updateDom();\n        this.bindEventListeners();\n        this.render();\n\n        if (__DEV__)\n        {\n            const moduleName = this.el.data('module').split(/\\//g).pop();\n\n            if (!!Object.keys(this.dom).length)\n            {\n                console.log(`Cached DOM for module: ${moduleName} =>`, this.dom);\n            }\n\n            if (!!Object.keys(this.options).length)\n            {\n                console.log(`Options for module: ${moduleName} =>`, this.options);\n            }\n        }\n    }\n\n    /**\n     * @abstract\n     */\n    protected preInit() : void {};\n\n    /**\n     * @abstract\n     */\n    protected init() : void {};\n\n    /**\n     * @abstract\n     */\n    protected render() : void {};\n\n    /**\n     * @abstract\n     */\n    protected bindEventListeners() : void {};\n\n    protected updateDom() : void\n    {\n        Object.assign(this.dom, getCachableDomElements(this.el));\n    };\n}\n\nexport default Module;\n"],"sourceRoot":""}